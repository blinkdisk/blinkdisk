/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as IndexImport } from './routes/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthMagicImport } from './routes/auth/magic'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AppLoadingImport } from './routes/app/loading'
import { Route as AppDeviceIdIndexImport } from './routes/app/{-$deviceId}/index'
import { Route as AppDeviceIdProfileIdIndexImport } from './routes/app/{-$deviceId}/{-$profileId}/index'
import { Route as AppDeviceIdProfileIdVaultIdRouteImport } from './routes/app/{-$deviceId}/{-$profileId}/{-$vaultId}/route'
import { Route as AppDeviceIdProfileIdVaultIdIndexImport } from './routes/app/{-$deviceId}/{-$profileId}/{-$vaultId}/index'
import { Route as AppDeviceIdProfileIdVaultIdSettingsImport } from './routes/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings'
import { Route as AppDeviceIdProfileIdVaultIdFolderIdIndexImport } from './routes/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/index'
import { Route as AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteImport } from './routes/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/route'
import { Route as AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdIndexImport } from './routes/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/index'

// Create/Update Routes

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthMagicRoute = AuthMagicImport.update({
  id: '/magic',
  path: '/magic',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AppLoadingRoute = AppLoadingImport.update({
  id: '/loading',
  path: '/loading',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDeviceIdIndexRoute = AppDeviceIdIndexImport.update({
  id: '/{-$deviceId}/',
  path: '/{-$deviceId}/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDeviceIdProfileIdIndexRoute = AppDeviceIdProfileIdIndexImport.update({
  id: '/{-$deviceId}/{-$profileId}/',
  path: '/{-$deviceId}/{-$profileId}/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDeviceIdProfileIdVaultIdRouteRoute =
  AppDeviceIdProfileIdVaultIdRouteImport.update({
    id: '/{-$deviceId}/{-$profileId}/{-$vaultId}',
    path: '/{-$deviceId}/{-$profileId}/{-$vaultId}',
    getParentRoute: () => AppRouteRoute,
  } as any)

const AppDeviceIdProfileIdVaultIdIndexRoute =
  AppDeviceIdProfileIdVaultIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppDeviceIdProfileIdVaultIdRouteRoute,
  } as any)

const AppDeviceIdProfileIdVaultIdSettingsRoute =
  AppDeviceIdProfileIdVaultIdSettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AppDeviceIdProfileIdVaultIdRouteRoute,
  } as any)

const AppDeviceIdProfileIdVaultIdFolderIdIndexRoute =
  AppDeviceIdProfileIdVaultIdFolderIdIndexImport.update({
    id: '/{-$folderId}/',
    path: '/{-$folderId}/',
    getParentRoute: () => AppDeviceIdProfileIdVaultIdRouteRoute,
  } as any)

const AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRoute =
  AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteImport.update({
    id: '/{-$folderId}/{-$backupId}/{-$directoryId}',
    path: '/{-$folderId}/{-$backupId}/{-$directoryId}',
    getParentRoute: () => AppDeviceIdProfileIdVaultIdRouteRoute,
  } as any)

const AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdIndexRoute =
  AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/app/loading': {
      id: '/app/loading'
      path: '/loading'
      fullPath: '/app/loading'
      preLoaderRoute: typeof AppLoadingImport
      parentRoute: typeof AppRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/magic': {
      id: '/auth/magic'
      path: '/magic'
      fullPath: '/auth/magic'
      preLoaderRoute: typeof AuthMagicImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/{-$deviceId}/': {
      id: '/app/{-$deviceId}/'
      path: '/{-$deviceId}'
      fullPath: '/app/{-$deviceId}'
      preLoaderRoute: typeof AppDeviceIdIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/{-$deviceId}/{-$profileId}/{-$vaultId}': {
      id: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}'
      path: '/{-$deviceId}/{-$profileId}/{-$vaultId}'
      fullPath: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}'
      preLoaderRoute: typeof AppDeviceIdProfileIdVaultIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/{-$deviceId}/{-$profileId}/': {
      id: '/app/{-$deviceId}/{-$profileId}/'
      path: '/{-$deviceId}/{-$profileId}'
      fullPath: '/app/{-$deviceId}/{-$profileId}'
      preLoaderRoute: typeof AppDeviceIdProfileIdIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings': {
      id: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings'
      path: '/settings'
      fullPath: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings'
      preLoaderRoute: typeof AppDeviceIdProfileIdVaultIdSettingsImport
      parentRoute: typeof AppDeviceIdProfileIdVaultIdRouteImport
    }
    '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/': {
      id: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/'
      path: '/'
      fullPath: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/'
      preLoaderRoute: typeof AppDeviceIdProfileIdVaultIdIndexImport
      parentRoute: typeof AppDeviceIdProfileIdVaultIdRouteImport
    }
    '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/': {
      id: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/'
      path: '/{-$folderId}'
      fullPath: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}'
      preLoaderRoute: typeof AppDeviceIdProfileIdVaultIdFolderIdIndexImport
      parentRoute: typeof AppDeviceIdProfileIdVaultIdRouteImport
    }
    '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}': {
      id: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}'
      path: '/{-$folderId}/{-$backupId}/{-$directoryId}'
      fullPath: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}'
      preLoaderRoute: typeof AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteImport
      parentRoute: typeof AppDeviceIdProfileIdVaultIdRouteImport
    }
    '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/': {
      id: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/'
      path: '/'
      fullPath: '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/'
      preLoaderRoute: typeof AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdIndexImport
      parentRoute: typeof AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteImport
    }
  }
}

// Create and export the route tree

interface AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRouteChildren {
  AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdIndexRoute: typeof AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdIndexRoute
}

const AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRouteChildren: AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRouteChildren =
  {
    AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdIndexRoute:
      AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdIndexRoute,
  }

const AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRouteWithChildren =
  AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRoute._addFileChildren(
    AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRouteChildren,
  )

interface AppDeviceIdProfileIdVaultIdRouteRouteChildren {
  AppDeviceIdProfileIdVaultIdSettingsRoute: typeof AppDeviceIdProfileIdVaultIdSettingsRoute
  AppDeviceIdProfileIdVaultIdIndexRoute: typeof AppDeviceIdProfileIdVaultIdIndexRoute
  AppDeviceIdProfileIdVaultIdFolderIdIndexRoute: typeof AppDeviceIdProfileIdVaultIdFolderIdIndexRoute
  AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRoute: typeof AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRouteWithChildren
}

const AppDeviceIdProfileIdVaultIdRouteRouteChildren: AppDeviceIdProfileIdVaultIdRouteRouteChildren =
  {
    AppDeviceIdProfileIdVaultIdSettingsRoute:
      AppDeviceIdProfileIdVaultIdSettingsRoute,
    AppDeviceIdProfileIdVaultIdIndexRoute:
      AppDeviceIdProfileIdVaultIdIndexRoute,
    AppDeviceIdProfileIdVaultIdFolderIdIndexRoute:
      AppDeviceIdProfileIdVaultIdFolderIdIndexRoute,
    AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRoute:
      AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRouteWithChildren,
  }

const AppDeviceIdProfileIdVaultIdRouteRouteWithChildren =
  AppDeviceIdProfileIdVaultIdRouteRoute._addFileChildren(
    AppDeviceIdProfileIdVaultIdRouteRouteChildren,
  )

interface AppRouteRouteChildren {
  AppLoadingRoute: typeof AppLoadingRoute
  AppIndexRoute: typeof AppIndexRoute
  AppDeviceIdIndexRoute: typeof AppDeviceIdIndexRoute
  AppDeviceIdProfileIdVaultIdRouteRoute: typeof AppDeviceIdProfileIdVaultIdRouteRouteWithChildren
  AppDeviceIdProfileIdIndexRoute: typeof AppDeviceIdProfileIdIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppLoadingRoute: AppLoadingRoute,
  AppIndexRoute: AppIndexRoute,
  AppDeviceIdIndexRoute: AppDeviceIdIndexRoute,
  AppDeviceIdProfileIdVaultIdRouteRoute:
    AppDeviceIdProfileIdVaultIdRouteRouteWithChildren,
  AppDeviceIdProfileIdIndexRoute: AppDeviceIdProfileIdIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthMagicRoute: typeof AuthMagicRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthMagicRoute: AuthMagicRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/app/loading': typeof AppLoadingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/magic': typeof AuthMagicRoute
  '/auth/register': typeof AuthRegisterRoute
  '/app/': typeof AppIndexRoute
  '/app/{-$deviceId}': typeof AppDeviceIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}': typeof AppDeviceIdProfileIdVaultIdRouteRouteWithChildren
  '/app/{-$deviceId}/{-$profileId}': typeof AppDeviceIdProfileIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings': typeof AppDeviceIdProfileIdVaultIdSettingsRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/': typeof AppDeviceIdProfileIdVaultIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}': typeof AppDeviceIdProfileIdVaultIdFolderIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}': typeof AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRouteWithChildren
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/': typeof AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/app/loading': typeof AppLoadingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/magic': typeof AuthMagicRoute
  '/auth/register': typeof AuthRegisterRoute
  '/app': typeof AppIndexRoute
  '/app/{-$deviceId}': typeof AppDeviceIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}': typeof AppDeviceIdProfileIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings': typeof AppDeviceIdProfileIdVaultIdSettingsRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}': typeof AppDeviceIdProfileIdVaultIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}': typeof AppDeviceIdProfileIdVaultIdFolderIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}': typeof AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/app/loading': typeof AppLoadingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/magic': typeof AuthMagicRoute
  '/auth/register': typeof AuthRegisterRoute
  '/app/': typeof AppIndexRoute
  '/app/{-$deviceId}/': typeof AppDeviceIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}': typeof AppDeviceIdProfileIdVaultIdRouteRouteWithChildren
  '/app/{-$deviceId}/{-$profileId}/': typeof AppDeviceIdProfileIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings': typeof AppDeviceIdProfileIdVaultIdSettingsRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/': typeof AppDeviceIdProfileIdVaultIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/': typeof AppDeviceIdProfileIdVaultIdFolderIdIndexRoute
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}': typeof AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdRouteRouteWithChildren
  '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/': typeof AppDeviceIdProfileIdVaultIdFolderIdBackupIdDirectoryIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/auth'
    | '/app/loading'
    | '/auth/login'
    | '/auth/magic'
    | '/auth/register'
    | '/app/'
    | '/app/{-$deviceId}'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}'
    | '/app/{-$deviceId}/{-$profileId}'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/app/loading'
    | '/auth/login'
    | '/auth/magic'
    | '/auth/register'
    | '/app'
    | '/app/{-$deviceId}'
    | '/app/{-$deviceId}/{-$profileId}'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/auth'
    | '/app/loading'
    | '/auth/login'
    | '/auth/magic'
    | '/auth/register'
    | '/app/'
    | '/app/{-$deviceId}/'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}'
    | '/app/{-$deviceId}/{-$profileId}/'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}'
    | '/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/loading",
        "/app/",
        "/app/{-$deviceId}/",
        "/app/{-$deviceId}/{-$profileId}/{-$vaultId}",
        "/app/{-$deviceId}/{-$profileId}/"
      ]
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/login",
        "/auth/magic",
        "/auth/register"
      ]
    },
    "/app/loading": {
      "filePath": "app/loading.tsx",
      "parent": "/app"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx",
      "parent": "/auth"
    },
    "/auth/magic": {
      "filePath": "auth/magic.tsx",
      "parent": "/auth"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx",
      "parent": "/auth"
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    },
    "/app/{-$deviceId}/": {
      "filePath": "app/{-$deviceId}/index.tsx",
      "parent": "/app"
    },
    "/app/{-$deviceId}/{-$profileId}/{-$vaultId}": {
      "filePath": "app/{-$deviceId}/{-$profileId}/{-$vaultId}/route.tsx",
      "parent": "/app",
      "children": [
        "/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings",
        "/app/{-$deviceId}/{-$profileId}/{-$vaultId}/",
        "/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/",
        "/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}"
      ]
    },
    "/app/{-$deviceId}/{-$profileId}/": {
      "filePath": "app/{-$deviceId}/{-$profileId}/index.tsx",
      "parent": "/app"
    },
    "/app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings": {
      "filePath": "app/{-$deviceId}/{-$profileId}/{-$vaultId}/settings.tsx",
      "parent": "/app/{-$deviceId}/{-$profileId}/{-$vaultId}"
    },
    "/app/{-$deviceId}/{-$profileId}/{-$vaultId}/": {
      "filePath": "app/{-$deviceId}/{-$profileId}/{-$vaultId}/index.tsx",
      "parent": "/app/{-$deviceId}/{-$profileId}/{-$vaultId}"
    },
    "/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/": {
      "filePath": "app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/index.tsx",
      "parent": "/app/{-$deviceId}/{-$profileId}/{-$vaultId}"
    },
    "/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}": {
      "filePath": "app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/route.tsx",
      "parent": "/app/{-$deviceId}/{-$profileId}/{-$vaultId}",
      "children": [
        "/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/"
      ]
    },
    "/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/": {
      "filePath": "app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}/index.tsx",
      "parent": "/app/{-$deviceId}/{-$profileId}/{-$vaultId}/{-$folderId}/{-$backupId}/{-$directoryId}"
    }
  }
}
ROUTE_MANIFEST_END */
